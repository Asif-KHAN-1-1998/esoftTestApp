import { observer } from "mobx-react-lite";         // –Ω–∞–±–ª—é–¥–∞—Ç–µ–ª—å –∑–∞ MobX-—Ö—Ä–∞–Ω–∏–ª–∏—â–µ–º
import { todoStore } from "../../stores/todoStore";  // –∏–º–ø–æ—Ä—Ç —Ç–≤–æ–µ–≥–æ —Å—Ç–æ—Ä–∞
import { useState, useEffect } from "react";                    // –ª–æ–∫–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –≤–≤–æ–¥–∞
import Modal from 'react-modal';
import TodoItem from "../TodoItem";


Modal.setAppElement('#root');

const TodoList = observer(() => {
   // –≤—Ä–µ–º–µ–Ω–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è input
  const [modalIsOpen, setModalIsOpen] = useState(false);
  const [todoId, setTodoId] = useState<number | undefined>(undefined); // –ª–æ–∫–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –≤–≤–æ–¥

  const openModal = (id?:number) => {
    setModalIsOpen(true);
    setTodoId(id)
  };
  
  const closeModal = () => {
    setModalIsOpen(false);
  };

  useEffect(() => {
    todoStore.loadTodo();
  }, []);

  return (
    <div style={{ padding: '20px' }}>
      <h2>üìù –°–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á</h2>
    <Modal isOpen={modalIsOpen} onRequestClose={closeModal}>
        <TodoItem onClose={closeModal} appElement={document.getElementById('root')} todoID = {todoId}/>
    </Modal>
    <button onClick={() => openModal(undefined)}>–°–æ–∑–¥–∞—Ç—å –∑–∞–¥–∞—á—É</button>
    <ul>
      {todoStore.todos.length > 0 ? (
        todoStore.todos.map((todo) => (
          <li key={todo.id}>
            <strong>{todo.title}</strong><br />
            {todo.description}<br />
            –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç: {todo.priority}, –°—Ç–∞—Ç—É—Å: {todo.status}<br />
            ID: {todo.id} –û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π {todo.assignee_first_name} {todo.assignee_last_name}<br />
            <button onClick={() => todoStore.removeTodo(todo.id!)}>–£–¥–∞–ª–∏—Ç—å</button>
            <button onClick={() => openModal(todo.id)}>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å</button>
          </li>
        ))
      ) : (
        <li>–ù–µ—Ç –∑–∞–¥–∞—á</li>
      )}
    </ul>

    </div>
  );
});

export default TodoList;
