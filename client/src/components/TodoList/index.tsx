import { observer } from "mobx-react-lite";         // –Ω–∞–±–ª—é–¥–∞—Ç–µ–ª—å –∑–∞ MobX-—Ö—Ä–∞–Ω–∏–ª–∏—â–µ–º
import { todoStore } from "../../stores/todoStore";  // –∏–º–ø–æ—Ä—Ç —Ç–≤–æ–µ–≥–æ —Å—Ç–æ—Ä–∞
import { useState, useEffect } from "react";                    // –ª–æ–∫–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –≤–≤–æ–¥–∞

const TodoList = observer(() => {
  const [newTodo, setNewTodo] = useState(""); // –≤—Ä–µ–º–µ–Ω–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è input

  const handleAdd = () => {
    if (newTodo.trim()) {
      todoStore.addTodo({
        id: 1,
        title: '–ü—Ä–∏–º–µ—Ä –∑–∞–¥–∞—á–∏',
        description: '–û–ø–∏—Å–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏',
        due_date: '2025-05-01',
        created_at: '2025-04-16',
        updated_at: '2025-04-16',
        priority: '–≤—ã—Å–æ–∫–∏–π',
        status: '–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—é',
        creator_first_name: '–ò–≤–∞–Ω',
        creator_last_name: '–ò–≤–∞–Ω–æ–≤',
        assignee_first_name: '–ü—ë—Ç—Ä',
        assignee_last_name: '–ü–µ—Ç—Ä–æ–≤'
      });; // –¥–æ–±–∞–≤–ª—è–µ–º –∑–∞–¥–∞—á—É –≤ store
      setNewTodo("");             // –æ—á–∏—â–∞–µ–º –ø–æ–ª–µ –≤–≤–æ–¥–∞
    }
  };
  useEffect(() => {
    todoStore.loadTodo();
  }, []);


  return (
    <div style={{ padding: '20px' }}>
      <h2>üìù –°–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á</h2>

      {/* –ü–æ–ª–µ –≤–≤–æ–¥–∞ –∏ –∫–Ω–æ–ø–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è */}
      <input
        type="text"
        value={newTodo}
        onChange={(e) => setNewTodo(e.target.value)}
        placeholder="–í–≤–µ–¥–∏—Ç–µ –∑–∞–¥–∞—á—É"
      />
      <button onClick={handleAdd}>–î–æ–±–∞–≤–∏—Ç—å</button>

      {/* –°–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á */}
      <ul>
  {todoStore.todos.map((todo) => (
    <li key={todo.id}>
      <strong>{todo.title}</strong><br />
      {todo.description}<br />
      –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç: {todo.priority}, –°—Ç–∞—Ç—É—Å: {todo.status}<br />
      –û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π: {todo.assignee_first_name} {todo.assignee_last_name}
    </li>
  ))}
</ul>

    </div>
  );
});

export default TodoList;
